#!/usr/bin/python3

import subprocess

from charmhelpers import fetch
from charmhelpers.core import hookenv


def bootstrap():
    try:
        import bcrypt
    except ImportError:
        packages = ['python3-bcrypt',
                    # These packages are only required for the pip
                    # install of the Cassandra driver.
                    'python3-pip', 'build-essential', 'python3-dev',
                    'libev4', 'libev-dev']
        fetch.apt_install(packages, fatal=True)

    try:
        import cassandra
    except ImportError:
        # Alas, the Cassandra driver isn't packaged in Ubuntu so we need
        # to install it via pip.
        subprocess.check_call(['pip3', 'install',
                               'cassandra-driver', 'blist'])

    import bcrypt
    import cassandra


def default_hook():
    # These need to be imported after bootstrap() or required Python
    # packages may not have been installed.
    import definitions
    import helpers
    import rollingrestart

    # We cannot do everything from within the ServiceManager.manage() call.
    # This means we need to disable implicit saves on hookenv.config(),
    # and explicitly save at the end of our hook. If we don't do this,
    # the implicit save at the end of ServiceManager.manage() will
    # destroy the config.changed() information we need later, and any
    # config changes made after ServiceManager.manage() will not
    # persist.
    config = hookenv.config()
    config.implicit_save = False

    sm = definitions.get_service_manager()
    sm.manage()

    # This cannot be a data_ready item on the service, as we *must* call
    # it or risk deadlocking our system; data_ready items will not be
    # called if the service requirements are not met. It also cannot be a
    # separate service, as per Bug #1401428 services are not called in a
    # defined order and we need to ensure this is called at the end of our
    # hook; restarts need to happen at the end of the hook if there are no
    # peer units.
    rollingrestart.rolling_restart(helpers.restart_and_remount_cassandra)

    # Explicit config save, since we turned off implicit saves earlier.
    config.save()


if __name__ == '__main__':
    bootstrap()
    default_hook()
